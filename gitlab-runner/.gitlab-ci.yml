.job-template:
  before_script:
    - pwd
    - | 
      echo "############################################################"
      echo "CI_SERVER_HOST=$CI_SERVER_HOST"
      echo "CI_SERVER_NAME=$CI_SERVER_NAME"
      echo "CI_SERVER_VERSION=$CI_SERVER_VERSION"
      echo "CI_RUNNER_DESCRIPTION=$CI_RUNNER_DESCRIPTION"
      echo "CI_RUNNER_EXECUTABLE_ARCH=$CI_RUNNER_EXECUTABLE_ARCH"
      echo "CI_RUNNER_ID=$CI_RUNNER_ID"
      echo "CI_RUNNER_REVISION=$CI_RUNNER_REVISION"
      echo "CI_RUNNER_SHORT_TOKEN=$CI_RUNNER_SHORT_TOKEN"
      echo "CI_RUNNER_TAGS=$CI_RUNNER_TAGS"
      echo "CI_RUNNER_VERSION=$CI_RUNNER_VERSION"
      echo "CI_PIPELINE_ID=$CI_PIPELINE_ID"
      echo "CI_PIPELINE_SOURCE=$CI_PIPELINE_SOURCE"
      echo "CI_PIPELINE_CREATED_AT=$CI_PIPELINE_CREATED_AT"
      echo "CI_JOB_ID=$CI_JOB_ID"
      echo "CI_JOB_IMAGE=$CI_JOB_IMAGE"
      echo "CI_JOB_NAME=$CI_JOB_NAME"
      echo "CI_JOB_STAGE=$CI_JOB_STAGE"
      echo "CI_JOB_STARTED_AT=$CI_JOB_STARTED_AT"
      echo "GITLAB_RUNNER_TAG=$GITLAB_RUNNER_TAG"
      echo "############################################################"
    - | 
      [[ -z "$GITLAB_RUNNER_TAG" ]] && echo "Undefined variable GITLAB_RUNNER_TAG" && exit 1
      if echo -n "$CI_RUNNER_TAGS" | grep -q "$GITLAB_RUNNER_TAG"; then
        echo "Selected runner is correct"
      else
        echo "Wrong runner selected !"
        exit 1
      fi
    - echo "Testing $GITLAB_RUNNER_TAG runner"

stages:
  - step_1
  - step_2

gitlab-job-runner:
  extends: .job-template
  stage: step_1
  tags:
    - gitlab-job
  variables:
    GITLAB_RUNNER_TAG: "gitlab-job"  
  image: debian:stretch-20200414-slim
  script:
    - echo "Basic test for gitlab-job-runner"

gitlab-ci-runner:
  extends: .job-template
  stage: step_1
  tags:
    - gitlab-ci
  variables:
    GITLAB_RUNNER_TAG: "gitlab-ci"  
  image: debian:stretch-20200414-slim
  script:
    - echo "Basic test for gitlab-ci-runner"

gitlab-ci-runner-docker:
  extends: .job-template
  stage: step_1
  tags:
    - gitlab-ci
  image: docker:19.03.12
  variables:
    GITLAB_RUNNER_TAG: "gitlab-ci"
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:19.03.12-dind
  script:
    - |
      echo "Testing Docker inside a Docker container aka Dind"
      docker info
      docker login -u "$DOCKER_REGISTRY_USER" --password-stdin "$DOCKER_REGISTRY_SERVER" < "$DOCKER_REGISTRY_PASSWORD_FILE_PATH"

gitlab-ci-runner-set-cache:
  extends: .job-template
  stage: step_1
  tags:
    - gitlab-ci
  image: debian:stretch-20200414-slim
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - .cache
  variables:
    GITLAB_RUNNER_TAG: "gitlab-ci"
  script:
    - |
      echo "Setting Cache"
      mkdir .cache || echo "Unable to create .cache directory"
      echo "$CI_PIPELINE_ID" > .cache/ci_pipeline_id

gitlab-ci-runner-get-cache:
  stage: step_2
  extends: .job-template
  image: debian:stretch-20200414-slim
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - .cache
  tags:
    - gitlab-ci
  variables:
    GITLAB_RUNNER_TAG: "gitlab-ci"
  needs: ["gitlab-ci-runner-set-cache"]
  script:
    - |
      echo "Getting cache"
      ls -la .cache || { echo "No .cache directory"; exit 1; }
      cache_pipeline_id=$(cat .cache/ci_pipeline_id)
      echo "cache_pipeline_id=$cache_pipeline_id, CI_PIPELINE_ID=$CI_PIPELINE_ID"
      if [[ "$cache_pipeline_id" != "$CI_PIPELINE_ID" ]]; then
        echo "Cached pipeline id is not the same as current pipeline id"
        exit 1
      else
        echo "Cached pipeline id is correct !"
      fi

gitlab-ci-runner-push-private-registry:
  stage: step_1
  extends: .job-template
  tags:
    - gitlab-ci
  image: docker:19.03.12
  variables:
    GITLAB_RUNNER_TAG: "gitlab-ci"
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:19.03.12-dind
  script:
    - |
      echo "Pushing image to private docker registry"
      docker login -u "$DOCKER_REGISTRY_USER" --password-stdin "$DOCKER_REGISTRY_SERVER" < "$DOCKER_REGISTRY_PASSWORD_FILE_PATH"
      image_name="gitlab-ci-busybox"
      docker build --build-arg CI_PIPELINE_ID="$CI_PIPELINE_ID" -t "$image_name" .
      target_image="$DOCKER_REGISTRY_SERVER/$DOCKER_REGISTRY_REPOSITORY/gitlab-ci/$image_name:1.0.0"
      docker tag "$image_name" "$target_image"
      docker push "$target_image"

gitlab-ci-runner-pull-private-registry:
  stage: step_2
  extends: .job-template
  image: <gcp_region>-docker.pkg.dev/<gcp_project_id>/docker-repository/gitlab-ci/gitlab-ci-busybox:1.0.0
  tags:
    - gitlab-ci
  variables:
    GITLAB_RUNNER_TAG: "gitlab-ci"
  needs: ["gitlab-ci-runner-push-private-registry"]
  script:
    - |
      echo "Pulling image from private docker registry"
      ls /opt
      image_pipeline_id=$(cat /opt/ci_pipeline_id)
      echo "image_pipeline_id=$image_pipeline_id, CI_PIPELINE_ID=$CI_PIPELINE_ID"
      if [[ "$image_pipeline_id" != "$CI_PIPELINE_ID" ]]; then
        echo "Image pipeline id is not the same as current pipeline id"
        echo "Check that runner pull policy is set to always !"
        exit 1
      else
        echo "Image pipeline id is correct !"
      fi
